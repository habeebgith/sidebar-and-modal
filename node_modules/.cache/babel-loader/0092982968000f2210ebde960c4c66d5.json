{"ast":null,"code":"var _jsxFileName = \"/Users/mars/Desktop/JohnProject/navbarside/src/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: \"hello\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}; // custom hook\n\n\n_s(AppProvider, \"7pDpjxpt81vLgIcSls7O8aGkvA4=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/mars/Desktop/JohnProject/navbarside/src/Context.js"],"names":["React","useState","useContext","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;;AAGA,MAAMC,UAAU,gBAAGH,KAAK,CAACI,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAE9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAmCP,QAAQ,CAAC,KAAD,CAAjD;AACA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAC,OAA3B;AAAA,cACEK;AADF;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAPD,C,CASA;;;GATMD,W;;KAAAA,W;AAUN,OAAO,MAAMI,gBAAgB,GAAG,MAAI;AAAA;;AAChC,SAAOP,UAAU,CAACC,UAAD,CAAjB;AACH,CAFM;;IAAMM,gB;;AAIb,SAAQN,UAAR,EAAoBE,WAApB","sourcesContent":["import React, {useState, useContext} from \"react\";\n\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({children})=>{\n\n    const [isSidebarOpen, setIsSidebarOpen]= useState(false)\n    return <AppContext.Provider value=\"hello\">\n            {children}\n    </AppContext.Provider>\n\n}\n\n// custom hook\nexport const useGlobalContext = ()=>{\n    return useContext(AppContext)\n} \n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}