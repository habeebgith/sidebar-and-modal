{"ast":null,"code":"var _jsxFileName = \"/Users/mars/Desktop/JohnProject/navbarside/src/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      isModalOpen,\n      isSidebarOpen,\n      openSidebar,\n      clos\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}; // custom hook\n\n\n_s(AppProvider, \"cEyDHMtlJzmj/6oov6+T09ZPMO4=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/mars/Desktop/JohnProject/navbarside/src/Context.js"],"names":["React","useState","useContext","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isModalOpen","setIsModalOpen","openSidebar","closeSidebar","openModal","closeModal","clos","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;;AAGA,MAAMC,UAAU,gBAAGH,KAAK,CAACI,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAE9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAmCP,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAA+BT,QAAQ,CAAC,KAAD,CAA7C;;AAEA,QAAMU,WAAW,GAAE,MAAI;AACnBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAK;AACtBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMK,SAAS,GAAG,MAAI;AAClBH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAI;AACnBJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD;;AAKA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACD,MAAAA,WAAD;AAAaF,MAAAA,aAAb;AAA2BI,MAAAA,WAA3B;AAAuCI,MAAAA;AAAvC,KAA5B;AAAA,cACET;AADF;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAvBD,C,CAyBA;;;GAzBMD,W;;KAAAA,W;AA0BN,OAAO,MAAMW,gBAAgB,GAAG,MAAI;AAAA;;AAChC,SAAOd,UAAU,CAACC,UAAD,CAAjB;AACH,CAFM;;IAAMa,gB;;AAIb,SAAQb,UAAR,EAAoBE,WAApB","sourcesContent":["import React, {useState, useContext} from \"react\";\n\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({children})=>{\n\n    const [isSidebarOpen, setIsSidebarOpen]= useState(false)\n    const [isModalOpen, setIsModalOpen]= useState(false)\n\n    const openSidebar =()=>{\n        setIsSidebarOpen(true)\n    }\n    const closeSidebar = () =>{\n        setIsSidebarOpen(false)\n    }\n    const openModal = ()=>{\n        setIsModalOpen(true)\n    }\n    const closeModal = ()=>{\n        setIsModalOpen(false)\n    }\n\n\n    return <AppContext.Provider value={{isModalOpen,isSidebarOpen,openSidebar,clos}}>\n            {children}\n    </AppContext.Provider>\n\n}\n\n// custom hook\nexport const useGlobalContext = ()=>{\n    return useContext(AppContext)\n} \n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}